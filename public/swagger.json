{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"FormattedProduct": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"price": {
						"type": "string"
					},
					"stock": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"name",
					"price",
					"stock"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ValidateErrorJSON": {
				"properties": {
					"message": {
						"type": "string",
						"enum": [
							"Validation failed"
						],
						"nullable": false
					},
					"details": {
						"properties": {},
						"additionalProperties": {},
						"type": "object"
					}
				},
				"required": [
					"message",
					"details"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateProductStockParams": {
				"properties": {
					"stock": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"stock"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Price": {
				"properties": {
					"amount": {
						"type": "number",
						"format": "double"
					},
					"currency": {
						"type": "string"
					}
				},
				"required": [
					"amount",
					"currency"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Product": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"price": {
						"$ref": "#/components/schemas/Price"
					},
					"stock": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"name",
					"price",
					"stock"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ProductCreationParams": {
				"properties": {
					"name": {
						"type": "string"
					},
					"stock": {
						"type": "number",
						"format": "double"
					},
					"price": {
						"properties": {
							"currency": {
								"type": "string"
							},
							"amount": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"currency",
							"amount"
						],
						"type": "object"
					}
				},
				"required": [
					"name",
					"stock",
					"price"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "warehouse-service",
		"version": "0.0.1",
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/failure": {
			"get": {
				"operationId": "GetFailure",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/ping": {
			"get": {
				"operationId": "GetMessage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/products": {
			"get": {
				"operationId": "GetAllProducts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/FormattedProduct"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateProduct",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Product"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ProductCreationParams"
							}
						}
					}
				}
			}
		},
		"/products/{id}": {
			"get": {
				"operationId": "GetProductById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FormattedProduct"
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"reason": {
											"type": "string"
										}
									},
									"required": [
										"reason"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"patch": {
				"operationId": "UpdateProductStock",
				"responses": {
					"204": {
						"description": "Modified",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"reason": {
											"type": "string"
										}
									},
									"required": [
										"reason"
									],
									"type": "object"
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateProductStockParams"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}